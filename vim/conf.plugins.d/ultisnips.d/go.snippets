snippet genf "関数を生成する"
// ${1:funcName} ${2:desc}
func $1(${3:arguments}) {
	$4
}
endsnippet

snippet fori "for i := 0; i < max..."
for ${1:counter} := 0; $1 < ${2:max}; $1++ {
	${3:implementation}
}
endsnippet

snippet foriv "for i, v := range ..."
for ${1:counter}, ${2:value} := range ${3:iterator} {
	${4:implementation}
}
endsnippet

snippet forv "for _, v := range..."
for _, ${1:value} := range ${2:iterator} {
	${3:implementation}
}
endsnippet

snippet gent "テストコードを生成する"
func Test${1:functionName}(t *testing.T) {
	type TD struct {
		$2 $3
		$4 $5
	}
	tds := []TD{
		TD{
			$2: $6,
			$4: $7,
		},
	}
	for _, v := range tds {
		$2, $4 := v.$2, v.$4
		ret := $1($2)
		assert.Equal(t, $4, ret)
	}
}
endsnippet
